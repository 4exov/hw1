/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.leicester.cw3;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import com.fasterxml.jackson.databind.ObjectMapper;

import edu.leicester.cw3.entity.Convenor;
import edu.leicester.cw3.repository.ModuleRepository;

import static org.junit.Assert.*;
import static org.mockito.Mockito.when;

import java.util.List;
import java.util.Optional;

@RunWith(SpringRunner.class)
@SpringBootTest
@AutoConfigureMockMvc
@ActiveProfiles("test")
public class LibraryTest {
	@Autowired
	private MockMvc mockMvc;
	@MockBean
	private ModuleRepository mockRepository;
	
	private static final ObjectMapper om = new ObjectMapper();
	
	@Test
	public void tesGetModuleById_OK() throws Exception {
		Module module = new Module ("CO1111", "Bioinformatics",3, true, new Convenor ("Alex", "Proffi", "OF11"))
				
				when (mockRepository.findById(0L)).thenReturn(Optional.of(module));
		
		
		
				
)
	}
	
	@Test
	public void testGetAllModules_OK() throws Exception{
			Convenor c1 = new Convenor("John", "Pro", "OF11");
			List<Module> modules = Array.asList(
					new Module("CO1111","Bioinformatics1",11,true,c1),
					new Module("CO2222","Bioinformatics2",11,true,c1),
					new Module("CO3333","Bioinformatics3",11,true,c1));		
	}
    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }
}
